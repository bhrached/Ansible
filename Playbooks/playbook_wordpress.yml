---
- name: Installer et configurer WordPress avec MariaDB
  hosts: wordpress
  become: true

  vars:
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    db_user: admin
    db_password: password
    root_password: root  # Définir le mot de passe root

  tasks:
    - name: Mise à jour de la liste des paquets avec gestion des erreurs
      apt:
        update_cache: yes
      register: apt_update
      ignore_errors: yes

    - name: Afficher les informations sur le réseau pour débogage
      command: ip a

    - name: Vérifier si la mise à jour du cache APT a échoué
      fail:
        msg: "La mise à jour du cache APT a échoué."
      when: apt_update is failed

    - name: Installer Apache
      apt:
        name: apache2
        state: present

    - name: Démarrer et activer Apache
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Installer les dépendances pour PHP
      apt:
        name: software-properties-common
        state: present

    - name: Ajouter le dépôt PHP PPA si nécessaire
      apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Installer PHP 8.3 et les modules nécessaires
      apt:
        name:
          - php8.3
          - libapache2-mod-php8.3
          - php8.3-mysql
        state: present

    - name: Installer PyMySQL pour gérer les connexions MariaDB
      apt:
        name: python3-pymysql
        state: present

    # Installation de MariaDB 
    - name: Installer MariaDB
      apt:
        name: mariadb-server
        state: present

    # Ajouter les directives au fichier de configuration de MariaDB
    - name: Ajouter la configuration dans /etc/mysql/my.cnf
      blockinfile:
        path: /etc/mysql/my.cnf
        block: |
          [client]
          port = 3306

          [mysql]
          default-character-set = utf8mb4

          [mysqld]
          port = 3306
          bind-address = 0.0.0.0
          log_error = /var/log/mysql/mariadb.log
      notify: Redémarrer MariaDB

    - name: Définir le mot de passe root
      command: >
        mysqladmin -u root password '{{ root_password }}'
      ignore_errors: yes

    - name: Supprimer les utilisateurs anonymes
      command: >
        mysql -u root -p'{{ root_password }}' -e "DELETE FROM mysql.user WHERE User='';"
      ignore_errors: yes

    - name: Interdire les connexions root à distance
      command: >
        mysql -u root -p'{{ root_password }}' -e "DELETE FROM mysql.user WHERE User='root' AND Host='%';"
      ignore_errors: yes

    - name: Créer un utilisateur MariaDB dédié avec un mot de passe
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: '*.*:ALL'
        host: localhost
        state: present
        login_user: root
        login_password: "{{ root_password }}"
      become: true

    - name: Créer la base de données WordPress
      mysql_db:
        name: wordpress
        state: present
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
      become: true

    - name: Accorder tous les privilèges administratifs à l'utilisateur admin
      mysql_user:
        name: "{{ db_user }}"
        host: localhost
        priv: '*.*:ALL,GRANT'
        state: present
        login_user: root
        login_password: "{{ root_password }}"
      become: true

    - name: Créer un utilisateur WordPress pour MariaDB
      mysql_user:
        name: wordpress
        password: password
        priv: 'wordpress.*:ALL'
        state: present
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
      become: true

    - name: Télécharger WordPress
      get_url:
        url: https://wordpress.org/wordpress-6.6.2.tar.gz
        dest: /tmp/wordpress.tar.gz

    - name: Extraire WordPress
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: /var/www/html
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: Configurer les permissions sur /var/www/html
      file:
        path: /var/www/html
        owner: www-data
        group: www-data
        recurse: yes

    - name: Configurer le fichier wp-config.php
      copy:
        src: /var/www/html/wp-config-sample.php
        dest: /var/www/html/wp-config.php
        remote_src: yes

    - name: Modifier wp-config.php avec les informations de la base de données
      lineinfile:
        path: /var/www/html/wp-config.php
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: 'database_name_here', line: 'define("DB_NAME", "wordpress");' }
        - { regexp: 'username_here', line: 'define("DB_USER", "wordpress");' }
        - { regexp: 'password_here', line: 'define("DB_PASSWORD", "password");' }

    - name: Supprimer le fichier index.html par défaut
      file:
        path: /var/www/html/index.html
        state: absent

    - name: Générer le fichier wordpress.conf pour Apache
      copy:
        dest: /etc/apache2/sites-available/wordpress.conf
        content: |
          <VirtualHost *:80>
              ServerAdmin webmaster@localhost
              DocumentRoot /var/www/html
              ServerName localhost

              <Directory /var/www/html>
                  AllowOverride All
                  Require all granted
              </Directory>

              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>

    - name: Activer le site WordPress dans Apache
      command: a2ensite wordpress.conf

    - name: Activer le module rewrite d'Apache
      command: a2enmod rewrite

    - name: Redémarrer Apache
      service:
        name: apache2
        state: restarted

  handlers:
    - name: Redémarrer MariaDB
      service:
        name: mariadb
        state: restarted